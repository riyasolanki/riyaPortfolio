{"ast":null,"code":"import { HEADING_PATTERN, PDF_ROLE_TO_HTML_ROLE } from './constants.js';\nexport function isPdfRole(role) {\n  return role in PDF_ROLE_TO_HTML_ROLE;\n}\nexport function isStructTreeNode(node) {\n  return 'children' in node;\n}\nexport function isStructTreeNodeWithOnlyContentChild(node) {\n  if (!isStructTreeNode(node)) {\n    return false;\n  }\n  return node.children.length === 1 && 0 in node.children && 'id' in node.children[0];\n}\nexport function getRoleAttributes(node) {\n  const attributes = {};\n  if (isStructTreeNode(node)) {\n    const {\n      role\n    } = node;\n    const matches = role.match(HEADING_PATTERN);\n    if (matches) {\n      attributes.role = 'heading';\n      attributes['aria-level'] = Number(matches[1]);\n    } else if (isPdfRole(role)) {\n      const htmlRole = PDF_ROLE_TO_HTML_ROLE[role];\n      if (htmlRole) {\n        attributes.role = htmlRole;\n      }\n    }\n  }\n  return attributes;\n}\nexport function getBaseAttributes(node) {\n  const attributes = {};\n  if (isStructTreeNode(node)) {\n    if (node.alt !== undefined) {\n      attributes['aria-label'] = node.alt;\n    }\n    if (node.lang !== undefined) {\n      attributes.lang = node.lang;\n    }\n    if (isStructTreeNodeWithOnlyContentChild(node)) {\n      const [child] = node.children;\n      if (child) {\n        const childAttributes = getBaseAttributes(child);\n        return {\n          ...attributes,\n          ...childAttributes\n        };\n      }\n    }\n  } else {\n    if ('id' in node) {\n      attributes['aria-owns'] = node.id;\n    }\n  }\n  return attributes;\n}\nexport function getAttributes(node) {\n  if (!node) {\n    return null;\n  }\n  return {\n    ...getRoleAttributes(node),\n    ...getBaseAttributes(node)\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}