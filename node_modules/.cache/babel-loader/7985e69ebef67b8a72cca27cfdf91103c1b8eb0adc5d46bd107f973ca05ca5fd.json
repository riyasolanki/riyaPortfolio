{"ast":null,"code":"'use client';\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport clsx from 'clsx';\nimport invariant from 'tiny-invariant';\nimport Page from './Page.js';\nimport useDocumentContext from './shared/hooks/useDocumentContext.js';\nimport { isProvided } from './shared/utils.js';\n/**\n * Displays a thumbnail of a page. Does not render the annotation layer or the text layer. Does not register itself as a link target, so the user will not be scrolled to a Thumbnail component when clicked on an internal link (e.g. in Table of Contents). When clicked, attempts to navigate to the page clicked (similarly to a link in Outline).\n *\n * Should be placed inside `<Document />`. Alternatively, it can have `pdf` prop passed, which can be obtained from `<Document />`'s `onLoadSuccess` callback function.\n */\nexport default function Thumbnail(props) {\n  const documentContext = useDocumentContext();\n  const mergedProps = {\n    ...documentContext,\n    ...props\n  };\n  const {\n    className,\n    linkService,\n    onItemClick,\n    pageIndex: pageIndexProps,\n    pageNumber: pageNumberProps,\n    pdf\n  } = mergedProps;\n  invariant(pdf, 'Attempted to load a thumbnail, but no document was specified. Wrap <Thumbnail /> in a <Document /> or pass explicit `pdf` prop.');\n  const pageIndex = isProvided(pageNumberProps) ? pageNumberProps - 1 : pageIndexProps !== null && pageIndexProps !== void 0 ? pageIndexProps : null;\n  const pageNumber = pageNumberProps !== null && pageNumberProps !== void 0 ? pageNumberProps : isProvided(pageIndexProps) ? pageIndexProps + 1 : null;\n  function onClick(event) {\n    event.preventDefault();\n    if (!isProvided(pageIndex) || !pageNumber) {\n      return;\n    }\n    invariant(onItemClick || linkService, 'Either onItemClick callback or linkService must be defined in order to navigate to an outline item.');\n    if (onItemClick) {\n      onItemClick({\n        pageIndex,\n        pageNumber\n      });\n    } else if (linkService) {\n      linkService.goToPage(pageNumber);\n    }\n  }\n  const {\n    className: classNameProps,\n    onItemClick: onItemClickProps,\n    ...pageProps\n  } = props;\n  return _jsx(\"a\", {\n    className: clsx('react-pdf__Thumbnail', className),\n    href: pageNumber ? '#' : undefined,\n    onClick: onClick,\n    children: _jsx(Page, {\n      ...pageProps,\n      _className: \"react-pdf__Thumbnail__page\",\n      _enableRegisterUnregisterPage: false,\n      renderAnnotationLayer: false,\n      renderTextLayer: false\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}