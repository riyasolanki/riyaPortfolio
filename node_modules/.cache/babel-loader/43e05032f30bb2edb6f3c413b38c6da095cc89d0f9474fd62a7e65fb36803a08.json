{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useMemo } from 'react';\nimport { getAttributes, isStructTreeNode, isStructTreeNodeWithOnlyContentChild } from './shared/structTreeUtils.js';\nexport default function StructTreeItem(_ref) {\n  let {\n    className,\n    node\n  } = _ref;\n  const attributes = useMemo(() => getAttributes(node), [node]);\n  const children = useMemo(() => {\n    if (!isStructTreeNode(node)) {\n      return null;\n    }\n    if (isStructTreeNodeWithOnlyContentChild(node)) {\n      return null;\n    }\n    return node.children.map((child, index) => {\n      return (\n        // biome-ignore lint/suspicious/noArrayIndexKey: index is stable here\n        _jsx(StructTreeItem, {\n          node: child\n        }, index)\n      );\n    });\n  }, [node]);\n  return _jsx(\"span\", {\n    className: className,\n    ...attributes,\n    children: children\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}